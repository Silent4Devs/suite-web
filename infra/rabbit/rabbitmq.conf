#######################################
# RabbitMQ Configuration File
#######################################

# Enable the management plugin
management.tcp.port = 15672
management.tcp.ip = 0.0.0.0

# General Settings
log.console = true
log.console.level = warning
log.dir = /var/log/rabbitmq
log.file = rabbit.log

# Enable HiPE (optional, improve performance by compiling certain parts of RabbitMQ to native code)
# This can result in faster message throughput but may increase startup time.
hipe_compile = true

#######################################
# Networking and Ports
#######################################
listeners.tcp.default = 5672

# Tune TCP keepalive settings for better resource management
heartbeat = 30 # Periodic heartbeats (in seconds) to detect connection issues early
tcp_listen_options.backlog = 8192
tcp_listen_options.nodelay = true

# Socket buffers (optimize based on system load)
tcp_listen_options.sndbuf = 262144
tcp_listen_options.rcvbuf = 262144

#######################################
# Memory and Resource Limits
#######################################

# Limit the amount of RAM RabbitMQ can use (prevents RabbitMQ from consuming too much memory)
vm_memory_high_watermark.relative = 0.7 # Use 70% of total system memory for RabbitMQ
# Alternatively, set absolute memory limit in MB (e.g., 4096MB)
# vm_memory_high_watermark.absolute = 16384MB

# Disk free space limit (stop receiving messages when the free disk space is below this limit)
disk_free_limit.relative = 0.1 # Stop when disk usage exceeds 90%
# Alternatively, set an absolute limit (e.g., 2GB)
# disk_free_limit.absolute = 10GB

# Default file descriptors limit (set higher if necessary based on traffic)
# This setting is not directly configurable in the RabbitMQ config file.
# It should be set at the OS level using `ulimit -n`.

#######################################
# Message Store and Queue Settings
#######################################
# Lazy queues (offload queue data to disk, useful for workloads with large or rarely consumed queues)
# Useful for long-lived queues with infrequent consumers.
queue_master_locator = min-masters
default_queue_type = lazy

#######################################
# Clustering (optional, for HA)
#######################################
# Cluster settings for high availability
# cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
# cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq1
# cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq2
# cluster_partition_handling = pause_minority  # Prevent split-brain scenarios

#######################################
# Authentication and Security
#######################################
# Enforce SSL/TLS
# listeners.ssl.default = 5671
# ssl_options.cacertfile = /etc/rabbitmq/cert/ca_certificate.pem
# ssl_options.certfile = /etc/rabbitmq/cert/server_certificate.pem
# ssl_options.keyfile = /etc/rabbitmq/cert/server_key.pem
# ssl_options.verify = verify_peer
# ssl_options.fail_if_no_peer_cert = true
# Enable TLS 1.2 and disable older, less secure versions
# ssl_options.versions.1 = tlsv1.2
# ssl_options.versions.2 = tlsv1.3
# Use strong cipher suites
# ssl_options.ciphers.1 = ECDHE-RSA-AES256-GCM-SHA384
# ssl_options.ciphers.2 = ECDHE-RSA-AES128-GCM-SHA256
#######################################
# Management and Monitoring
#######################################
# Set limits on message rates and manage resources based on memory/disk limits
collect_statistics_interval = 5000 # Collect stats every 5 seconds

# Enable Prometheus for monitoring
prometheus.tcp.port = 15692
