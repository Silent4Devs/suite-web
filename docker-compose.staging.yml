version: "3.8"

services:
  nginx-tabantaj:
    image: nginx:stable-alpine
    container_name: nginx-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - .:/var/www/html
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
      - postgres-tabantaj
      - redis-tabantaj
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - suite-web_tabantajnetwork

  postgres-tabantaj:
    image: postgres:16-alpine
    container_name: postgres-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - tabantaj-database:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - suite-web_tabantajnetwork
    mem_limit: 6g

  php:
    build:
      context: "./infra/php/"
      dockerfile: dockerfile
    container_name: php-tabantaj
    depends_on:
      - postgres-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/html
    ports:
      - 9000:80
    networks:
      - suite-web_tabantajnetwork

  queue-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    command: php artisan queue:work --tries=6
    depends_on:
      - php
    container_name: queue-worker-tabantaj
    restart: unless-stopped
    tty: true
    environment:
      CONTAINER_ROLE: queue
    networks:
      - suite-web_tabantajnetwork
    mem_limit: 2g

  schedule-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    depends_on:
      - php
    restart: unless-stopped
    tty: true
    container_name: schedule-worker-tabantaj
    volumes:
      - .:/var/www/html
    command: php artisan schedule:work
    environment:
      CONTAINER_ROLE: scheduler
    networks:
      - suite-web_tabantajnetwork
    mem_limit: 2g

  redis-tabantaj:
    image: redis:alpine
    container_name: redis-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - suite-web_tabantajnetwork
    mem_limit: 3g

  rdadmin-tabantaj:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: rdadmin-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 6360:80
    env_file:
      - .env
    networks:
      - suite-web_tabantajnetwork

  rabbitmq-tabantaj:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-tabantaj
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped
    tty: true
    networks:
      - suite-web_tabantajnetwork
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  goservices:
    image: ghcr.io/silent4devs/goservices:latest
    container_name: goservices
    restart: unless-stopped
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - goservices_data:/goservices
    networks:
      - suite-web_tabantajnetwork

  reportservice:
    image: ghcr.io/silent4devs/reportservice:latest
    container_name: reportservice
    restart: unless-stopped
    tty: true
    ports:
      - "3301:3301"
    volumes:
      - reportservice_data:/reportservice
    networks:
      - suite-web_tabantajnetwork

  mailhog-service:
    image: mailhog/mailhog
    container_name: mailhog-container
    restart: unless-stopped
    tty: true
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - mailhog_data:/mailhog_data
    networks:
      - suite-web_tabantajnetwork

volumes:
  tabantaj-database:
    driver: local
  rabbitmq_data:
    driver: local
  goservices_data:
    driver: local
  reportservice_data:
    driver: local
  mailhog_data:
    driver: local

networks:
  suite-web_tabantajnetwork:
    driver: bridge
