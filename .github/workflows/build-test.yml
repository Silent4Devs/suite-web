name: Build and Test
run-name: ${{ github.actor }} run Build and Test
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - feature/*
      - hotfix/*
      - release/*
      - fix/*
      - refactor/*

jobs:
  build_and_check:
    runs-on: ubuntu-latest
    # Service container Postgresql postgresql
    services:
      # Label used to access the service container
      postgres-maqueta:
        # Docker Hub image (also with version)
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: homestead
        ## map the "external" 55432 port with the "internal" 5432
        ports:
          - 5432:5432
        # Set health checks to wait until postgresql database has started (it takes some seconds to start)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["8.2"]
        dependency-stability: ["prefer-none"]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v3

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # - name: Generate key
      #   run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      # - name: Run Migrations
      #   # Set environment
      #   env:
      #     DB_CONNECTION: pgsql
      #     DB_DATABASE: homestead
      #     DB_PORT: 5432
      #     DB_USERNAME: postgres
      #     DB_PASSWORD: secret

      #   run: php artisan migrate:fresh --seed --class=VersionIsoHistoricoSeeder

      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

      # # Code quality
      # - name: Execute tests (Unit and Feature tests) via PHPUnit
      #   # Set environment
      #   env:
      #     DB_CONNECTION: pgsql
      #     DB_DATABASE: homestead
      #     DB_PORT: 5432
      #     DB_USERNAME: postgres
      #     DB_PASSWORD: secret

      #   run: vendor/bin/phpunit --testdox

      # - name: Execute tests (Unit and Feature tests) via PestPHP
      #   # Set environment
      #   env:
      #     DB_CONNECTION: pgsql
      #     DB_DATABASE: homestead
      #     DB_PORT: 5432
      #     DB_USERNAME: postgres
      #     DB_PASSWORD: secret

      #   run: vendor/bin/pest

      - uses: symfonycorp/security-checker-action@v4

      # - name: Execute Code Static Analysis (PHP Stan + Larastan)
      #   run: |
      #     vendor/bin/phpstan analyse app -c ./vendor/nunomaduro/larastan/extension.neon  --level=4 --no-progress
