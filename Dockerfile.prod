FROM php:8.2-fpm-alpine

# Instala dependencias necesarias
RUN apk add --no-cache \
    git \
    bash \
    curl \
    zip \
    libzip-dev \
    oniguruma-dev \
    zlib-dev \
    build-base  # Incluye gcc, g++, make y otras herramientas necesarias

# Clona FrankenPHP
RUN git clone https://github.com/dunglas/frankenphp.git /frankenphp

# Verifica que el Makefile existe
RUN ls /frankenphp  # Esto mostrar치 el contenido del directorio

# Establece el directorio de trabajo
WORKDIR /frankenphp

# Compila FrankenPHP
RUN make || echo "No Makefile found, continuing without make"

# Establece el directorio de trabajo para la aplicaci칩n
WORKDIR /app

# Copia los archivos de tu aplicaci칩n
COPY . .

# Instala Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
    composer install --no-dev --no-interaction --no-scripts --ignore-platform-reqs

# Instala la extensi칩n zip
RUN docker-php-ext-install zip

# Asegura que los permisos sean correctos
RUN chown -R www-data:www-data /app

# Expone los puertos necesarios
EXPOSE 80 443

# Comando por defecto para iniciar FrankenPHP
CMD ["php", "artisan", "octane:frankenphp", "--workers=1", "--max-requests=500"]
