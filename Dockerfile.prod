# Usa una imagen base PHP FPM
FROM php:8.2-fpm-alpine


# Add docker-php-extension-installer script
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install dependencies
RUN apk add --no-cache \
    bash \
    curl \
    freetype-dev \
    g++ \
    gcc \
    git \
    icu-dev \
    icu-libs \
    libc-dev \
    libzip-dev \
    libpq-dev \
    make \
    #mysql-client \
    nodejs \
    npm \
    oniguruma-dev \
    yarn \
    openssh-client \
    postgresql-libs \
    postgresql-client \
    rsync \
    zlib-dev \
    sudo \
    zip \
    unzip \
    libsodium-dev

# Install php extensions
RUN chmod +x /usr/local/bin/install-php-extensions && \
    install-php-extensions \
    @composer \
    redis-stable \
    #imagick-stable \
    #xdebug-stable \
    bcmath \
    calendar \
    exif \
    gd \
    intl \
    #pdo_mysql \
    pdo_pgsql \
    pcntl \
    soap \
    zip \
    apcu \
    opcache \
    sockets \
    sodium \
    excimer \
    pcntl \
    posix \
    amqp \
    ftp


# Instalar Frank o Road (seg√∫n prefieras)
RUN curl -sS https://github.com/laravel/road/releases/latest/download/road-linux-amd64 -o /usr/local/bin/road && \
    chmod +x /usr/local/bin/road

# Establecer el directorio de trabajo
WORKDIR /var/www/html

# Copiar archivos de tu proyecto Laravel al contenedor
COPY . /var/www/html

# Crear los directorios de almacenamiento y dar permisos
RUN mkdir -p storage/framework/cache storage/framework/views \
    && chown -R www-data:www-data storage bootstrap/cache

# Instalar Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Instalar dependencias de PHP y Laravel, incluyendo Octane
RUN composer install --no-interaction --prefer-dist

# Instalar Laravel Octane
RUN composer require laravel/octane

# Exponer el puerto
EXPOSE 8000

# Iniciar Octane con Frank o Road
CMD ["php", "artisan", "octane:start", "--host=0.0.0.0", "--port=8000", "--server=road"]
