# Usa la imagen oficial de PHP
FROM php:8.2-fpm-alpine

# Añadir script de instalador de extensiones PHP
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install dependencies
RUN apk add --no-cache \
    bash \
    curl \
    freetype-dev \
    g++ \
    gcc \
    git \
    icu-dev \
    icu-libs \
    libc-dev \
    libzip-dev \
    libpq-dev \
    make \
    #mysql-client \
    nodejs \
    npm \
    oniguruma-dev \
    yarn \
    openssh-client \
    postgresql-libs \
    postgresql-client \
    rsync \
    zlib-dev \
    sudo \
    zip \
    unzip \
    libsodium-dev

# Install php extensions
RUN chmod +x /usr/local/bin/install-php-extensions && \
    install-php-extensions \
    @composer \
    redis-stable \
    #imagick-stable \
    #xdebug-stable \
    bcmath \
    calendar \
    exif \
    gd \
    intl \
    #pdo_mysql \
    pdo_pgsql \
    pcntl \
    soap \
    zip \
    apcu \
    opcache \
    sockets \
    sodium \
    excimer \
    pcntl \
    posix \
    amqp \
    ftp

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copiar el proyecto al contenedor
COPY . /var/www

# Establecer el directorio de trabajo
WORKDIR /var/www

# Crear directorios de caché y establecer permisos
RUN mkdir -p storage/framework/cache bootstrap/cache && \
    chown -R www-data:www-data storage bootstrap/cache && \
    chmod -R 775 storage bootstrap/cache

# Instalar dependencias de Laravel y Laravel Octane
RUN composer install --no-dev --optimize-autoloader --ignore-platform-reqs || true && \
    composer require laravel/octane --ignore-platform-reqs || true && \
    composer require spiral/roadrunner --ignore-platform-reqs || true

# Exponer el puerto que usará Octane
EXPOSE 9000

# Comando para ejecutar Octane con RoadRunner
CMD ["php", "artisan", "octane:start", "--host=0.0.0.0", "--server=roadrunner"]
