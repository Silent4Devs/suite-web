# FROM dunglas/frankenphp:latest-builder-php8.2-alpine
FROM dunglas/frankenphp:latest-php8.2-alpine

# Add docker-php-extension-installer script
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install dependencies
RUN apk add --no-cache \
    bash \
    curl \
    freetype-dev \
    g++ \
    gcc \
    git \
    icu-dev \
    icu-libs \
    libc-dev \
    libzip-dev \
    libpq-dev \
    linux-headers \
    libxml2-dev \
    supervisor \
    make \
    nodejs \
    npm \
    oniguruma-dev \
    yarn \
    openssh-client \
    postgresql-libs \
    postgresql-client \
    rsync \
    zlib-dev \
    sudo \
    zip \
    unzip \
    libsodium-dev \
    chromium

# Install PHP extensions
RUN chmod +x /usr/local/bin/install-php-extensions && \
    install-php-extensions \
    @composer \
    redis-stable \
    bcmath \
    calendar \
    exif \
    gd \
    intl \
    pdo_pgsql \
    pcntl \
    soap \
    zip \
    apcu \
    opcache \
    sockets \
    sodium \
    excimer \
    pcntl \
    posix \
    amqp \
    ftp

# Composer
#RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy application files
#COPY . /app

# Set working directory
#WORKDIR /app

ENV COMPOSER_ALLOW_SUPERUSER=1

#ENTRYPOINT ["sh", "/infra/php/entrypoint.sh"]

# Ensure required directories exist before running composer and other commands
# RUN mkdir -p /app/storage/framework/cache \
#     && mkdir -p /app/storage/framework/sessions \
#     && mkdir -p /app/storage/framework/views \
#     && chown -R www-data:www-data /app/storage \
#     && chmod -R 775 /app/storage

# Install composer dependencies without scripts that require a database
#RUN composer install --no-scripts --no-interaction --optimize-autoloader

RUN ls -la /app

# Install frontend dependencies
# RUN npm install
# RUN npm run build

# Ensure permissions are correct
RUN chown -R www-data:www-data /app \
    && chmod 755 -R /app

# RUN chown -R www-data:www-data /app/vendor \
#     && chmod -R 755 /app/vendor

RUN mkdir /tmp/public/
RUN cp -r /app/public/* /tmp/public/

# Expose necessary ports
EXPOSE 80 443 8000

# Healthcheck
HEALTHCHECK --interval=15m --timeout=3s \
    CMD curl --fail http://localhost/ || exit 1


