FROM php:8.2-fpm-alpine

# A침adir el script para instalar extensiones de PHP
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Instalar dependencias y extensiones PHP
RUN apk add --no-cache \
    bash \
    curl \
    freetype-dev \
    g++ \
    gcc \
    git \
    icu-dev \
    libc-dev \
    libzip-dev \
    libpq-dev \
    make \
    nodejs \
    npm \
    oniguruma-dev \
    yarn \
    openssh-client \
    postgresql-libs \
    postgresql-client \
    rsync \
    zlib-dev \
    sudo \
    zip \
    unzip \
    libsodium-dev && \
    chmod +x /usr/local/bin/install-php-extensions && \
    install-php-extensions \
    @composer \
    redis-stable \
    bcmath \
    calendar \
    exif \
    gd \
    intl \
    pdo_pgsql \
    pcntl \
    soap \
    zip \
    apcu \
    opcache \
    sockets \
    sodium \
    excimer \
    posix \
    amqp \
    ftp && \
    rm -rf /var/cache/apk/*

# Copiar el c칩digo de la aplicaci칩n
COPY . /var/www
WORKDIR /var/www

# Establecer permisos
RUN chown -R www-data:www-data /var/www && \
    chmod 755 -R /var/www

# Crear carpetas necesarias
RUN mkdir -p storage/framework/cache storage/framework/sessions storage/framework/views bootstrap/cache && \
    chown -R www-data:www-data storage bootstrap/cache && \
    chmod -R 775 storage bootstrap/cache

# Instalar npm
RUN npm install -g npm@latest

# Generar la clave de la aplicaci칩n y configurar Octane
RUN php artisan key:generate && \
    php artisan octane:install --server="swoole"

# Comando para iniciar el servidor
CMD ["php", "artisan", "octane:start", "--server=swoole", "--host=0.0.0.0"]

# Exponer el puerto
EXPOSE 8000

# Healthcheck
HEALTHCHECK --interval=15m --timeout=3s \
    CMD curl --fail http://localhost/ || exit 1
