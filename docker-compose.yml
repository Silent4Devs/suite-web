services:
  nginx-tabantaj:
    image: nginx:stable-alpine
    container_name: nginx-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
    volumes:
      - .:/var/www/html
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
      - postgres-tabantaj
      - redis-tabantaj
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - tabantajnetwork

  postgres-tabantaj:
    image: postgres:16-alpine
    container_name: postgres-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      # - ./infra/postgres/data:/var/lib/postgresql/data #localpath
      - tabantaj-database:/var/lib/postgresql/data
      #- ./infra/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - .env
    ports:
      - "5432:5432"
    # networks:
    #   - tabantajnetwork
    networks:
      - tabantajnetwork
    mem_limit: 6g

  php:
    #uncomment this if you will use only docker compose
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    #     # target: php-production  # Specify the target build stage if applicable
    #     # args:
    #     # - BUILD_ENV=production  # Pass any necessary build arguments
    # #container_name: php-tabantaj
    #uncomment this if you will use only docker compose
    #image: johnvo95/tabantaj_php-tabantaj:latest
    container_name: php-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    ports:
      - 9000:80
    networks:
      - tabantajnetwork

  queue-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    command: php artisan queue:work --tries=6
    depends_on:
      - php
    container_name: queue-worker-tabantaj
    restart: unless-stopped
    tty: true
    environment:
      CONTAINER_ROLE: queue
    networks:
      - tabantajnetwork
    mem_limit: 4g

  schedule-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    depends_on:
      - php
    restart: unless-stopped
    tty: true
    container_name: schedule-worker-tabantaj
    volumes:
      - .:/var/www/html
      - ./infra/php/php.ini:/usr/local/etc/php/php.ini
      - ./infra/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    command: php artisan schedule:work
    environment:
      CONTAINER_ROLE: scheduler
    networks:
      - tabantajnetwork
    mem_limit: 4g

  redis-tabantaj:
    image: redis:alpine
    container_name: redis-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/redis/redis.conf:/usr/local/etc/redis/redis.conf # Mount the Redis configuration file
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork
    mem_limit: 4g

  rdadmin-tabantaj:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: rdadmin-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 6360:80
    env_file:
      - .env
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork
    mem_limit: 1g

  rabbitmq-tabantaj:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-tabantaj
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    tty: true
    networks:
      - tabantajnetwork
    volumes:
      - ./infra/rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - rabbitmq_data:/var/lib/rabbitmq

  goservices:
    image: ghcr.io/silent4devs/goservices:latest
    container_name: goservices
    restart: unless-stopped
    tty: true
    ports:
      - "3300:3300"
    volumes:
      - goservices_data:/goservices
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork

  reportservice:
    image: ghcr.io/silent4devs/reportservice:latest
    container_name: reportservice
    restart: unless-stopped
    tty: true
    ports:
      - "3301:3301"
    volumes:
      - reportservice_data:/reportservice
    networks:
      - tabantajnetwork
    # networks:
    #   - tabantajnetwork

  # newrelic-redis:
  #   container_name: newrelic-redis
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "redis-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-go:
  #   container_name: newrelic-go
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "goservices"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-rabbit-tabantaj:
  #   container_name: newrelic-rabbit-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "rabbit-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-queue-worker-tabantaj:
  #   container_name: newrelic-queue-worker-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "queue-worker-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-schedule-worker-tabantaj:
  #   container_name: newrelic-schedule-worker-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "schedule-worker-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-php-tabantaj:
  #   container_name: newrelic-php-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "php-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-postgres-tabantaj:
  #   container_name: newrelic-postgres-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "postgres-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # newrelic-nginx-tabantaj:
  #   container_name: newrelic-nginx-tabantaj
  #   image: newrelic/infrastructure:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   pid: host
  #   privileged: true
  #   tty: true
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   environment:
  #     NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
  #     NRIA_DISPLAY_NAME: "nginx-tabantaj"
  #   restart: unless-stopped
  #   networks:
  #     - tabantajnetwork

  # logstash-tabantaj:
  #   image: docker.elastic.co/logstash/logstash:8.8.1
  #   container_name: logstash-tabantaj
  #   restart: unless-stopped
  #   tty: true
  #   volumes:
  #     - ./infra/logstash:/usr/share/logstash/pipeline
  #   environment:
  #     ELASTICSEARCH_HOST: "https://log-api.newrelic.com/log/v1"
  #     ELASTICSEARCH_PORT: 9200
  #   ports:
  #     - 5044:5044
  #   depends_on:
  #     - newrelic-php-tabantaj
  #   networks:
  #     - tabantajnetwork

volumes:
  tabantaj-database:
    driver: local
  rabbitmq_data:
    driver: local
  pgadmin-data:
    driver: local
  goservices_data:
    driver: local
  reportservice_data:
    driver: local

networks:
  tabantajnetwork:
    driver: bridge
