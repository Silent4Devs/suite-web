version: "3.8"
services:
  nginx-tabantaj:
    image: nginx:stable-alpine
    container_name: nginx-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - .:/var/www/html
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
      - postgres-tabantaj
      - redis-tabantaj
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - tabantajnetwork

  postgres-tabantaj:
    image: postgres:16-alpine
    container_name: postgres-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - tabantaj-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=homestead
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=homestead
    ports:
      - "5432:5432"
    networks:
      - tabantajnetwork
    mem_limit: 6g
    labels:
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port": "%%port%%"}]'
      com.datadoghq.ad.logs: '[{"source": "postgres", "service": "postgres-tabantaj"}]'
      com.datadoghq.tags.env: "prod"
      com.datadoghq.tags.service: "tabantaj"
      com.datadoghq.tags.version: "1"

  php:
    #uncomment this if you will use only docker compose
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    #uncomment this if you will use only docker compose
    #image: johnvo95/tabantaj_php-tabantaj:latest
    container_name: php-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - .:/var/www/html
    ports:
      - 9000:80
    labels:
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port": "%%port%%"}]'
      com.datadoghq.ad.logs: '[{"source": "php", "service": "php-tabantaj"}]'
      com.datadoghq.tags.env: "prod"
      com.datadoghq.tags.service: "tabantaj"
      com.datadoghq.tags.version: "1"
    networks:
      - tabantajnetwork

  queue-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    command: php artisan queue:work --tries=6
    depends_on:
      - php
    container_name: queue-worker-tabantaj
    restart: unless-stopped
    tty: true
    environment:
      CONTAINER_ROLE: queue
    networks:
      - tabantajnetwork

  schedule-worker:
    build:
      context: "./infra/php/"
      dockerfile: Dockerfile
    depends_on:
      - php
    restart: unless-stopped
    tty: true
    container_name: schedule-worker-tabantaj
    volumes:
      - .:/var/www/html
    command: php artisan schedule:work
    environment:
      CONTAINER_ROLE: scheduler
    networks:
      - tabantajnetwork

  redis-tabantaj:
    image: redis:alpine
    container_name: redis-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/redis/redis.conf:/usr/local/etc/redis/redis.conf # Mount the Redis configuration file
      - ./infra/redis/sysctl.conf:/etc/sysctl.conf # Mount the sysctl configuration file
    networks:
      - tabantajnetwork
    mem_limit: 3g
    labels:
      com.datadoghq.ad.check_names: "[redisdb]"
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port": "6379"}]'
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis-tabantaj"}]'
      com.datadoghq.tags.env: "prod"
      com.datadoghq.tags.service: "tabantaj"
      com.datadoghq.tags.version: "1"

  rdadmin-tabantaj:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: rdadmin-tabantaj
    restart: unless-stopped
    tty: true
    ports:
      - 6360:80
    environment:
      - REDIS_1_HOST=redis-tabantaj # Replace with your Redis container name
      - REDIS_1_PORT=6379 # Replace with your Redis container port
    networks:
      - tabantajnetwork

  rabbitmq-tabantaj:
    image: rabbitmq:3-management-alpine
    container_name: rabbit-tabantaj
    environment:
      - RABBITMQ_DEFAULT_USER=desarrollo
      - RABBITMQ_DEFAULT_PASS=Password123.
      - RABBITMQ_DEFAULT_VHOST=desarrollo # Add this line
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped
    tty: true
    networks:
      - tabantajnetwork
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./infra/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  newrelic-redis:
    container_name: newrelic-redis
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "redis-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-go:
    container_name: newrelic-go
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "goservices"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-rabbit-tabantaj:
    container_name: newrelic-rabbit-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "rabbit-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-queue-worker-tabantaj:
    container_name: newrelic-queue-worker-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "queue-worker-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-schedule-worker-tabantaj:
    container_name: newrelic-schedule-worker-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "schedule-worker-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-php-tabantaj:
    container_name: newrelic-php-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "php-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-postgres-tabantaj:
    container_name: newrelic-postgres-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "postgres-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  newrelic-nginx-tabantaj:
    container_name: newrelic-nginx-tabantaj
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    tty: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      NRIA_LICENSE_KEY: "0841dbce0e17ccb0f7de92dad0fea418FFFFNRAL"
      NRIA_DISPLAY_NAME: "nginx-tabantaj"
    restart: unless-stopped
    networks:
      - tabantajnetwork

  logstash-tabantaj:
    image: docker.elastic.co/logstash/logstash:8.8.1
    container_name: logstash-tabantaj
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/logstash:/usr/share/logstash/pipeline
    environment:
      ELASTICSEARCH_HOST: "https://log-api.newrelic.com/log/v1"
      ELASTICSEARCH_PORT: 9200
    ports:
      - 5044:5044
    depends_on:
      - newrelic-php-tabantaj
    networks:
      - tabantajnetwork

  goservices:
    image: ghcr.io/silent4devs/goservices:latest
    container_name: goservices
    restart: unless-stopped
    tty: true
    ports:
      - "3300:3300"
    volumes:
      - goservices_data:/goservices
    networks:
      - tabantajnetwork

volumes:
  tabantaj-database:
    driver: local
  rabbitmq_data:
    driver: local
  pgadmin-data:
    driver: local
  goservices_data:
    driver: local

networks:
  tabantajnetwork:
    driver: bridge
